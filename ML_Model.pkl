import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
import pickle

# Load the dataset
data = pd.read_excel('loan_dataset.xlsx')

# Preprocess the dataset
# Drop unnecessary columns
columns_to_drop = ['id', 'member_id', 'url', 'zip_code', 'addr_state', 'desc']  # Adjust as per dataset
data = data.drop(columns=columns_to_drop, errors='ignore')

# Handle missing values (example: filling with mean)
data = data.fillna(data.mean(numeric_only=True))

# Encode categorical variables
categorical_columns = ['term', 'grade', 'sub_grade', 'emp_title', 'home_ownership', 'verification_status',
                       'purpose', 'title', 'application_type']
data = pd.get_dummies(data, columns=categorical_columns, drop_first=True)

# Define features (X) and target (y)
if 'loan_status' in data.columns:
    X = data.drop(columns=['loan_status'])
    y = data['loan_status']
else:
    raise KeyError("'loan_status' column not found in the dataset.")

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Save the model to a file
with open('ML_Model.pkl', 'wb') as file:
    pickle.dump(model, file)

print("Model has been trained and saved as 'ML_Model.pkl'.")
